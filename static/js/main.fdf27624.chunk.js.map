{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/AboutUs.js","components/Alert.js","components/Disabled.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","style","backgroundColor","color","href","title","id","aria-current","about","role","type","class","onClick","toggleBlueMode","toggleGreenMode","toggleRedMode","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","find","result","Fragment","concat","mode","heading","value","onChange","event1","target","rows","changed","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","reverse","i","length","charAt","includes","split","event2","AboutUs","mystyle","setMyStyle","btnText","newBtnText","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","border","defaultProps","Alert","alert","word","lower","slice","capitalize","Disabled","condition","setCondition","placeholder","document","getElementById","disabled","setTimeout","App","setMode","setAlert","message","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.fdf27624.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'; \r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <nav className=\"navbar navbar-expand\" style={{backgroundColor: '#444141'}}>\r\n        {/* <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}> */}\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" style={{color: 'white'}} to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" style={{color: 'white'}} href=\"#\">{props.title}</a>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\" style={{color: 'white'}}>Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\" style={{color: 'white'}}>Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/aboutus\" style={{color: 'white'}}>{props.about}</Link> */}\r\n                <a className=\"nav-link\" href=\"/aboutus\" style={{color: 'white'}}>{props.about}</a>\r\n              </li>\r\n              <li>\r\n                {/* <Link className=\"nav-link\" to=\"/disabled\" style={{color: 'white'}}>Typing master</Link> */}\r\n                <a className=\"nav-link\" href=\"/disabled\" style={{color: 'white'}}>Typing master</a>\r\n              </li>\r\n            </ul>\r\n            \r\n            <form className=\"d-flex\" role=\"search\">\r\n              {/* <input className=\"form-control\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success mx-3\" type=\"submit\">Search</button> */}\r\n              \r\n              <div className=\"form-check form-switch\">\r\n                {/* <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/> */}\r\n                {/* <label className={`form-check-label text-bg-${props.mode}`} htmlFor=\"flexSwitchCheckDefault\">Enable Blue Mode</label> */}\r\n\r\n                <button type=\"button\" class=\"btn btn-primary\" onClick={props.toggleBlueMode} id=\"BlueSwitch\">Enable Blue Mode</button>\r\n                <button type=\"button\" class=\"btn btn-success mx-3\" onClick={props.toggleGreenMode} id=\"GreenSwitch\">Enable Green Mode</button>\r\n                <button type=\"button\" class=\"btn btn-danger\" onClick={props.toggleRedMode} id=\"RedSwitch\">Enable Red Mode</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    about: 'About us here (write)'\r\n};","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props)  {\r\n\r\n    const handleUpClick = ()=>{\r\n        let changed = text.toUpperCase();\r\n        setText(changed);\r\n        props.showAlert(\" Converted to Upper Case\", \"success\");\r\n    }\r\n\r\n    const handleDownClick = ()=>{\r\n        let changed = text.toLowerCase();\r\n        setText(changed);\r\n        props.showAlert(\" Converted to Lower Case\", \"success\");\r\n    }\r\n\r\n    const handleReverseClick = ()=>{\r\n        let reverse = \"\", changed;\r\n        for (let i = 0; i < text.length; i++)\r\n        {\r\n            changed = text.charAt(i);\r\n            reverse = changed + reverse;\r\n        }\r\n        setText(reverse);\r\n        props.showAlert(\" Word has been reversed\", \"success\");\r\n    }\r\n\r\n    const handleFindClick = ()=>{\r\n        if(text.includes(find))\r\n        props.showAlert(\" Word found\", \"success\");\r\n        else\r\n        props.showAlert(\" Word not found\", \"danger\");\r\n    }\r\n    \r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n        props.showAlert(\" Word has been spoken\", \"success\");\r\n      }      \r\n      \r\n      const handleClearClick = ()=>{\r\n        setText(\"\"); result(\"\");\r\n        props.showAlert(\" Cleared\", \"success\");\r\n    }\r\n\r\n      // TO BE ABLE TO TYPE\r\n      const handleOnChange = (event1)=>{\r\n          setText(event1.target.value)\r\n        }\r\n\r\n      const handleFindChange = (event2)=>{\r\n          result(event2.target.value)\r\n        }\r\n      \r\n      const [text, setText] = useState('');\r\n      const [find, result] = useState('');\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h4 className={`text-${props.mode === 'white'?'dark':'white'}`}>{props.heading}</h4>\r\n                \r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"maintext\" rows=\"10\" style={{backgroundColor: props.mode ==='dark'?'grey':'white', color: props.mode === 'dark'?'white':'black'}}></textarea>\r\n                </div>\r\n\r\n                <button className=\"btn btn-success mx-3\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-success mx-3\" onClick={handleDownClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-success mx-3\" onClick={speak}>Speak</button>\r\n                <button className=\"btn btn-success mx-3\" onClick={handleReverseClick}>Reverse</button>\r\n                <button className=\"btn btn-warning mx-3\" onClick={handleFindClick}>Find</button>\r\n                <button className=\"btn btn-danger mx-3\" onClick={handleClearClick}>Clear</button>\r\n\r\n            </div>\r\n            <div className={`container my-3 text-${props.mode === 'white'?'dark':'white'}`}>\r\n                <h1>Your text summary</h1>\r\n                <p>{text.length>0? text.split(\" \").length:0} words and {text.length} characters</p>\r\n                <p>You can read this text in about {0.008 * text.split(\" \").length}</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0? text:\"Enter something in the textbox above to preview it here\"}</p>\r\n            </div>\r\n\r\n            <div className={`container text-${props.mode === 'white'?'dark':'white'}`}>\r\n                <h5>Write the word you would like to find</h5>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={find} onChange={handleFindChange} id=\"findtext\" rows=\"1\"></textarea>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function AboutUs() {\r\n\r\n    const[mystyle, setMyStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n    \r\n    const[btnText, newBtnText] = useState(\"Enable Dark Mode\")\r\n    \r\n    const toggleStyle = () =>{\r\n        if(mystyle.color === 'black')\r\n        {\r\n            setMyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black',\r\n                border: '1px white solid'\r\n            })\r\n            newBtnText(\"Disable Dark Mode\")\r\n        }\r\n        else\r\n        {\r\n            setMyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            newBtnText(\"Enable Dark Mode\")\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\" style={mystyle}>\r\n            <h2>About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={mystyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={mystyle}>\r\n                    Accordion Item #1\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={mystyle}>\r\n                    Accordion Item #2\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={mystyle}>\r\n                    Accordion Item #3\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-dark my-3\" onClick={toggleStyle}>{btnText}</button>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return(\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import React from \"react\";\r\nimport {useState} from 'react';\r\n\r\nexport default function Disabled(props)  {     \r\n\r\n    const [text, setText] = useState('');\r\n\r\n    const [condition, setCondition] = useState(false);\r\n    \r\n    const helloFunction=(event1)=> {\r\n        document.getElementById(\"hello\").disabled = condition;\r\n        setTimeout(() => {setCondition(true)}, 90000);\r\n        setText(event1.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`text-${props.mode === 'light'?'dark':'light'}`}>\r\n                <h3>Start writing to get your typing speed!</h3>\r\n                <textarea className=\"form-control my-4\" id=\"hello\" value={text} placeholder=\"write here....\" onChange={helloFunction} rows=\"6\"/>\r\n                <p>{text.length>0? text.split(\" \").length:0} words</p>\r\n                {/* <h4>Your typing speed is {(text.split(\" \").length)/1.5} WPM</h4> */}\r\n\r\n                <h4>Your typing speed is {(text.length>0? text.split(\" \").length:0)/1.5} WPM</h4>\r\n            </div>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport AboutUs from './components/AboutUs';\nimport Alert from './components/Alert';\nimport Disabled from './components/Disabled';\nimport React, {useState} from 'react';\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\n\nfunction App() {\n  const[mode, setMode] = useState('white');\n\n  const toggleBlueMode = ()=>{\n    if(mode === 'white')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = '#18325c';\n      showAlert(\" Blue mode has been enabled\", \"success\");\n      // document.title = 'Text Formatter - Blue Mode';\n\n      // setInterval(() => {\n      //   document.title = 'Text Formatter is amazing';\n      // }, 2000)\n\n      // setInterval(() => {\n      //   document.title = 'Install Text Formatter now';\n      // }, 1500)\n    }\n    else if (mode === 'dark')\n    {\n      setMode('white');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"White mode has been enabled\", \"success\");\n    }\n    else\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = '#18325c';\n      showAlert(\"Blue mode has been enabled\", \"success\");\n    }\n  }\n\n\n  const toggleGreenMode = ()=>{\n    if(mode === 'white')\n    {\n      setMode('green');\n      document.body.style.backgroundColor = '#1e3c1e';\n      showAlert(\"Green mode has been enabled\", \"success\");\n    }\n    else if (mode === 'green')\n    {\n      setMode('white');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"White mode has been enabled\", \"success\");\n    }\n    else\n    {\n      setMode('green');\n      document.body.style.backgroundColor = '#1e3c1e';\n      showAlert(\"Green mode has been enabled\", \"success\");\n    }\n  }\n\n\n  const toggleRedMode = ()=>{\n    if(mode === 'white')\n    {\n      setMode('red');\n      document.body.style.backgroundColor = '#853232';\n      showAlert(\"Red mode has been enabled\", \"success\");\n      \n    }\n    else if (mode === 'red')\n    {\n      setMode('white');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"White mode has been enabled\", \"success\");\n    }\n    else\n    {\n      setMode('red');\n      document.body.style.backgroundColor = '#853232';\n      showAlert(\"Red mode has been enabled\", \"success\");\n    }\n  }\n\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {setAlert(null)}, 3000);\n  }\n\n  return <>\n    {/* <BrowserRouter> */}\n      <Navbar title = \"Text Formatter\" mode={mode} toggleBlueMode={toggleBlueMode} toggleGreenMode={toggleGreenMode} toggleRedMode={toggleRedMode}/>\n      <Alert alert={alert}/>\n      <div className = \"container my-3\">\n        <TextForm heading = \"Enter your text below\" mode={mode} showAlert={showAlert}/>\n        <AboutUs />\n        <Disabled />\n        {/* <Routes>\n          <Route path=\"/\" element={<TextForm heading = \"Enter your text below\" mode={mode} showAlert={showAlert}/>}/>\n          <Route path=\"/AboutUs\" element={<AboutUs />}/>\n          <Route path=\"/Disabled\" element={<Disabled />}/>\n        </Routes> */}\n      </div>\n    {/* </BrowserRouter> */}\n  </>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}